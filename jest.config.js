const { resolve } = require('path');

module.exports = {
    preset: 'ts-jest',
    testEnvironment: 'node',
    testMatch: ['**/*.steps.ts', '**/*.test.ts'],
    collectCoverageFrom: [
        'src/**/*.ts',
        '!src/**/*/index.ts',
        '!src/**/*/Server.ts',
        '!src/index.ts',
        '!src/common/modules/ModulesFactory.ts',
        '!src/common/decorators/**',
        '!src/common/dependencies/Types.ts',
        '!src/common/http/**',
        '!src/common/modules/**',
        '!src/common/utils/**',
        '!src/infrastructure/app/**',
        '!src/infrastructure/bd/postgresql/adapter/**',
        '!src/infrastructure/pubsub/**',
        '!src/infrastructure/client/**',
        '!src/infrastructure/redis/adapter/**',
        '!src/modules/shared/**',
        '!src/modules/HealthCheck/**',
        '!src/modules/**/schemas/**',
        '!src/modules/**/constants/**',
        '!src/modules/**/dependencies/**',
        '!src/modules/**/test/**',
        '!**/__mocks__/**',
    ],
    coverageDirectory: './coverage/',
    collectCoverage: true,
    moduleNameMapper: {
        '^@application/(.*)$': resolve(__dirname, './src/application/$1'),
        '^@domain/(.*)$': resolve(__dirname, './src/domain/$1'),
        '^@infrastructure/(.*)$': resolve(__dirname, './src/infrastructure/$1'),
        '^@configuration/(.*)$': resolve(__dirname, './src/configuration/$1'),
        '^@common/(.*)$': resolve(__dirname, './src/common/$1'),
        '^@modules/(.*)$': resolve(__dirname, './src/modules/$1'),
        '^@configuration': resolve(__dirname, './src/configuration/index'),
        '^@util': resolve(__dirname, './src/util/index'),
        '^@modules': resolve(__dirname, './src/modules/index'),
        '^@common': resolve(__dirname, './src/common/index'),
    },
    reporters: ['default', ['jest-junit', { outputDirectory: 'test-results', outputName: 'test-report.xml' }]],
    setupFiles: ['<rootDir>/jest.setup.ts'],
};
